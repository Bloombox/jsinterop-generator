load(
    "//third_party/java_src/j2cl/opensource/common",
    "rebase_as_root",
    "remove_oss_extension",
)

generator_files_to_sync = glob(
    include = [
        "google3/third_party/java_src/jsinterop/internal_do_not_use/**",
        "google3/third_party/java_src/jsinterop/java/jsinterop/generator/**",
        "google3/third_party/java_src/jsinterop/javatests/jsinterop/generator/**",
        "google3/third_party/java_src/jsinterop/opensource/generator/**",
        "google3/third_party/java_src/jsinterop/opensource/*.md",
        "google3/third_party/java_src/jsinterop/third_party/*.oss",
        "google3/third_party/java_src/jsinterop/third_party/empty.js",
        "google3/third_party/java_src/jsinterop/LICENSE",
        "google3/third_party/java_src/jsinterop/jsinterop_generator.bzl",
        "google3/third_party/java_src/jsinterop/jsinterop_generator_import.bzl",
    ],
    exclude = [
        "google3/third_party/java_src/jsinterop/opensource/generator/copy.bar.sky",
        "google3/third_party/java_src/jsinterop/third_party/BUILD.base.oss",
        # Don't sync stuff related to typescript yet
        "google3/third_party/java_src/jsinterop/java/jsinterop/generator/typescript/**",
        "google3/third_party/java_src/jsinterop/java/jsinterop/generator/nodejs/**",
        "google3/third_party/java_src/jsinterop/java/jsinterop/generator/global/**",
        "google3/third_party/java_src/jsinterop/java/jsinterop/generator/gwtlinker/**",
        "google3/third_party/java_src/jsinterop/javatests/jsinterop/generator/typescript/**",
        "google3/third_party/java_src/jsinterop/typescript_generator_js.bzl",
    ],
)

# transformations used during the copy process.
generator_transformations = remove_oss_extension([
    "google3/third_party/java_src/jsinterop/opensource/generator/WORKSPACE.oss",
    "google3/third_party/java_src/jsinterop/opensource/generator/BUILD.oss",
    "google3/third_party/java_src/jsinterop/third_party/j2cl_library.bzl.oss",
    "google3/third_party/java_src/jsinterop/third_party/utils.bzl.oss",
])
generator_transformations += rebase_as_root("third_party/java_src/jsinterop", "generator")
generator_transformations += [
    core.move("third_party/BUILD.generator.oss", "third_party/BUILD"),
    core.move("opensource/generator", ""),
    # remove guava-gwt deps because the gwt version of jsinterop generator is not
    # opensourced yet
    buildozer.modify(
        "java/jsinterop/generator/...:*",
        [
            buildozer.cmd("remove deps //java/com/google/common/collect:collect-gwt"),
        ],
    ),

    # Add error-prone deps
    buildozer.modify(
        "java/jsinterop/generator/model:model",
        [buildozer.cmd("add deps @error_prone//jar")],
    ),

    # constraints attribute of java_library is not supported by bazel
    buildozer.modify(
        "java/jsinterop/generator/...:%java_library",
        ["remove constraints"],
    ),

    # Internally, the visibility of third_party/java_src/jsinterop is restricted to
    # third_party/java/jsinterop . and third_party/java_src/jsinterop.
    # Externally everyone should be able to use .bzl files.
    buildozer.modify(
        ":__pkg__",
        ["set default_visibility //visibility:public"],
    ),

    core.replace(
        before = "${x}",
        after = "",
        multiline = True,
        regex_groups = {
        },
    ),
]
